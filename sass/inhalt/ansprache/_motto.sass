@use "sass:math"

#motto
	display: flex
	flex-direction: column
	contain: paint
	overflow: hidden
	position: relative
	z-index: 2
	#autos, #fahrraeder
		display: flex
		align-items: center
		justify-content: center
		font-size: 200%
		--padding: calc(1rem + 4vw)
		--height: calc(4rem + 12vw)
		--gap: calc(var(--padding) * 1.6)

		position: relative
		p
			font-weight: bold
		&::before
			content: ""
			position: absolute
			z-index: -1
			height: 177%
			width: 171%
			//background: red
			background: radial-gradient(closest-side, white 70%, transparent)
			//box-shadow: 0 0 14rem 14rem red
			//border-radius: 50%
			//margin: 0 calc(var(--hide) / -2)
	#autos
		padding-top: var(--padding)
		padding-right: var(--padding)
		--aspect-ratio: 2080 / 815
		--width: calc(var(--aspect-ratio) * var(--height))
		--hide: calc(var(--height) * -4 / 3)
		picture
			position: relative
			z-index: 1
			img
				height: var(--height)
				aspect-ratio: var(--aspect-ratio)
			margin-left: var(--hide)
		//video
		//	position: absolute
		//	width: 25%
		//	margin-left: calc(0.965 * var(--width) + var(--hide))
		//	bottom: calc(var(--height) / 3.7)
		//	transform: translateY(25%)
		.wolke
			position: absolute
			width: 0
			margin-left: calc(0.965 * var(--width) + var(--hide))
			left: 0
			bottom: calc(var(--height) / 3.7 + var(--padding) + 100% - (2 * var(--padding)) * 2.7)
			height: 0
			border-radius: 50%
			@for $i from 1 through 8
				&:nth-child(#{$i})
					$animation-duration: (random(2) + 2) * 1s
					animation: wolke#{$i} $animation-duration infinite cubic-bezier(0, 0, 0.7, 1)
					//animation-delay: random(2) * 1s
					//animation-delay: $animation-duration
					//animation-delay: math.div($i, 4) * 1s
					animation-delay: math.div($i, 2) * 1s
					@keyframes wolke#{$i}
						0%
							$startSize: math.div(random(4), 100)
							width: calc(#{$startSize} * var(--height))
							height: calc(#{$startSize} * var(--height))
							background-color: rgba(50, 50, 50, random(1) / 2 + 0.1)
							transform: translate(random() * 30%, random() * 30%)
						100%
							$endSize: math.div(random() + .5, 3)
							transform: translate(random() * 30%, random() * 30% - 30%)
							width: calc(#{$endSize} * var(--height))
							height: calc(#{$endSize} * var(--height))
							background-color: transparent

			//animation: var(--keyframes) 4s infinite ease-out
			//@keyframes wolke
			//	0%
			//		width: calc(.02 * var(--height))
			//		height: calc(.02 * var(--height))
			//		background-color: rgba(50, 50, 50, .3)
			//		transform: none
			//	50%
			//		background-color: rgba(100, 100, 100, .3)
			//	100%
			//		transform: translateY(-20%)
			//		width: var(--height)
			//		height: var(--height)
			//		background-color: transparent

		p
			margin-left: var(--gap)
			margin-top: calc(var(--height) / -4)
			margin-right: auto
			em
				color: darkred
		&::before
			transform: translateX(var(--hide))
	#fahrraeder
		padding-left: var(--padding)
		margin-bottom: var(--padding)
		--hide: calc(-2 / 3 * 1.25 * var(--height))
		p
			margin-left: auto
			opacity: 0
			transition: opacity 2.2s ease
		picture
			transform: translateX(100%)
			transition: transform 2s ease-out
			img
				height: calc(1.25 * var(--height))
			margin-right: var(--hide)
		p
			margin-right: var(--gap)
			em
				color: darkgreen
		&::before
			--shift: calc(-1 * var(--hide))
			transform: translateX(var(--shift))
		&::after
			position: absolute
			content: ""
			//background: red
			--color: rgba(0, 67, 96, 0.4)
			// #0a3050 #0e2231
			background: var(--color)
			--scale: 1
			box-shadow: 0 0 16rem 5rem var(--color), 5rem 3rem 12rem 3rem #0055a977
			z-index: 1
			will-change: top, left, transform
			--time: 2s
			transition: top var(--time) ease, left var(--time) ease-in, transform var(--time) ease
			top: calc(-0 * var(--height))
			left: calc(-1.8 * var(--hide))
			transform: scale(var(--scale))
		&.gesehen
			p
				opacity: 1
			picture
				transform: translateX(0)
			&::after
				top: calc(var(--height) * 1.1)
				left: calc(100vw - (-2.4 * var(--hide)))
				transform: rotate(20deg) scale(var(--scale))
	em
		font-weight: bold
		font-style: normal
	--one-car-less-sternfahrten-overlap: 1rem
	#one-car-less
		display: flex
		flex-direction: column
		align-items: center
		position: relative
		//padding: var(--padding)
		--width: 2rem
		--border-radius: 3.2rem
		background: linear-gradient(45deg, white 50%, #ffffff99 80%, white)
		// box-shadow: 0 0 2rem 1rem white
		padding-bottom: calc(2rem + var(--one-car-less-sternfahrten-overlap))
		z-index: 1
		&::before
			content: ""
			position: absolute
			left: 0
			width: 100%
			top: 0
			height: 2rem
			transform: translateY(-100%)
			background: linear-gradient(0deg, #ffffff99, transparent)
		.text, .beschreibung
			background: white
			display: flex
			flex-direction: column
			align-items: center
			position: relative
			z-index: 1
			padding: .6rem
		.text
			margin-top: calc(var(--padding) * 2)
			font-size: 250%
			text-transform: uppercase
			font-weight: 900
			color: black
			font-family: var(--schriftart-id)
			p
				//display: block
				line-height: .82
				background: white
				&.less
					font-size: 92%
				&.car
					font-size: 108%
		.beschreibung
			margin-bottom: calc(var(--padding) * 1)
			font-size: 120%
			text-align: center
			max-width: 600px
			padding: 0 var(--padding)
			z-index: 2
			p + ol
				padding: .8rem 0
				padding-left: 40px
				margin: 0
				li
					text-align: left

		.linie, .linie::before
			--correction: .3rem
			content: ""
			position: absolute
			height: 100%
			//width: 60%
			top: 0
			border-top-right-radius: var(--border-radius)
			//transform: translateX(calc(-50% + .3rem))
			left: 0
		.linie::before
			margin-top: calc(1 * var(--width))
			//margin-right: calc(1 * var(--width))
			background: white
			border-top-right-radius: calc(var(--border-radius) - var(--width))
			width: calc(100% - var(--width))
		.linie
			//margin-top: calc(-.5 * var(--width))
			//margin-right: calc(-1 * var(--width))
			//background: var(--farbe-sekund채r)
			background: linear-gradient(110deg, var(--farbe-terti채r), var(--farbe-sekund채r))
			width: calc(50% + var(--correction) + var(--width) / 2)
			display: flex
			align-items: center
			overflow: hidden

			////background: red
			//border: 2rem solid var(--farbe-sekund채r)
			//border-bottom: none
			&::after
				position: absolute
				content: ""
				height: 160%
				width: 2rem
				//background: red
				background: linear-gradient(90deg, transparent, #ffffff77, transparent)
				z-index: 1
				transform: rotate(45deg)
				left: -110%
				transition: left 2s linear
				transition-delay: 1.6s
				will-change: left
		&.gesehen .linie::after
			left: 210%
		//&::after
		//	content: ""
		//	position: absolute
		//	height: 2rem
		//	width: 100%
		//	bottom: 0
		//	background: linear-gradient(to bottom, transparent, white)
		//	z-index: 2
	.sternfahrten
		display: flex
		flex-direction: column
		align-items: center
		justify-content: center
		background: linear-gradient(0deg, transparent, rgba(255, 255, 255, .8) 50%)
		&::before
			content: ""
			position: absolute
			top: 0
			left: 0
			align-self: flex-start
			justify-self: flex-start
			width: 50%
			height: 50%
			background: white
		position: relative
		// overflow: hidden
		margin: 0
		z-index: 1
		>.bild
			position: relative
			display: flex
			justify-content: center
			align-items: center
			width: 100%
			perspective: 1000px
			//noinspection CssInvalidFunction
			transform: translateY(calc(-1 * var(--one-car-less-sternfahrten-overlap)))
			// use absolute unit which is the same for media queries (see below)
			// use SASS variable so it can be used in media queries (CSS variables aren't supported in media queries)
			$max-width: 1000px
			>.hintergrund
				position: absolute
				height: 80%
				width: 100%
				overflow: hidden
				--box-shadow: 0 0 0.7rem rgba(40, 40, 40, .8)
				--box-shadow-inset: inset 0 0 2rem .2rem rgba(40, 40, 40, .8)
				box-shadow: var(--box-shadow)
				&::before
					content: ""
					position: absolute
					height: 100%
					width: 100%
					z-index: 1
					box-shadow: var(--box-shadow-inset)
					transform: scaleX(1.1) // shadow only at top and bottom
				&::after
					content: ""
					position: absolute
					height: 100%
					width: 100%
					// Blurred background heller oder dunkler machen?
					background-image: linear-gradient(0deg, rgba(80, 80, 80, .4), rgba(80, 80, 80, .4)), url("../img/Sternfahrten zugeschnitten.png?as=webp&quality=30&width=1153")
					filter: blur(8px)
					// https://stackoverflow.com/a/42963980/11485145
					transform: scale(1.1)
			>picture
				width: 100%
				position: relative
				z-index: 2
				--box-shadow: 0 0 1.2rem .2rem rgba(20, 20, 20, 1)
				--box-shadow-inset: inset 0 0 2rem .2rem rgba(20, 20, 20, .7)
				// use CSS variable so it can be overwritten easily
				--border-radius: 2rem

				--intensity: 6deg
				--rotate-x: calc(-1 * var(--intensity) * (var(--mouse-y) - .5))
				--rotate-y: calc(var(--intensity) * (var(--mouse-x) - .5))
				transform: rotateX(var(--rotate-x)) rotateY(var(--rotate-y))
				// box-shadow inset doesn't work on img elements
				&::after
					content: ""
					position: absolute
					z-index: 3
					top: 0
					left: 0
					height: 100%
					width: 100%
					border-radius: var(--border-radius)
					box-shadow: var(--box-shadow-inset)
					border: 1px solid rgba(0, 0, 0, 0.6)
				box-shadow: var(--box-shadow)
				border-radius: var(--border-radius)
				overflow: hidden
				// Fallback property, in case max() is not supported
				//noinspection CssOverwrittenProperties
				max-width: $max-width
				//noinspection CssOverwrittenProperties
				max-width: max(#{$max-width}, 60vw)
				max-height: 70vh
				filter: brightness(1.4)
				aspect-ratio: 1153 / 609
				img
					top: 0
					left: 0
					--intensity: 2.4

					width: calc(100% + var(--intensity) * 1vw)
					height: calc(100% + var(--intensity) * 1vh)
					--transform-x: calc(var(--intensity) * -1vw * var(--mouse-x))
					--transform-y: calc(var(--intensity) * -1vh * var(--mouse-y))
					transform: translate(var(--transform-x), var(--transform-y))
					transition: transform .1s ease-out
					will-change: transform
					aspect-ratio: 1153 / 609
			@media(max-width: $max-width)
				>picture
					--border-radius: 0
					transform: none
					img
						width: 100%
						height: 100%
						transform: none
						will-change: initial
			@media(min-width: $max-width) and (max-width: calc(#{$max-width} + 8rem))
				>picture
					max-width: calc(#{$max-width} - 2 * var(--border-radius))

		figcaption
			// margin-top: -4vw
			margin-top: calc(1.2rem - var(--one-car-less-sternfahrten-overlap))
			position: relative
			z-index: 3
			font-size: 120%
			text-align: center
			padding: 0 var(--padding)
	@media (max-width: 720px)
		#autos, #fahrraeder
			font-size: 150%
		#fahrraeder::after
			--scale: .5
	@media (max-width: 520px)
		#autos, #fahrraeder
			padding-top: var(--padding)
			padding-bottom: var(--padding)
		#fahrraeder::after
			display: none
	@media (max-width: 360px)
		#autos, #fahrraeder
			font-size: 120%
